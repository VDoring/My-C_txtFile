[링크]
http://dblab.duksung.ac.kr/ds/course1.html

	==[개념]==
포인터는 '주소'를 저장하는 '변수'이다.

포인터엔 주소 연산자(&)와 참조 연산자(*)가 있다.
- 주소 연산자(&)는 어떤 변수의 실제 주소를 얻고자 할때 사용하는 것으로, 주소를 얻고자 하는 변수 앞에 붙여주기만 하면 되고
- 참조 연산자(*)는 포인터에 저장되어 있는 주소에 기억되어 있는 데이터를 변경시키거나 사용할때 쓰는 것으로, 포인터의 앞에 붙여주기만 하면 된다.


	==[사용법]==
*포인터 = 값;
변수 = *포인터;

< 포인터 선언하는 방법 >
int* pointer = &Variable;
데이터형* 포인터이름 = &변수
(우선 변수를 선언하고, 그 변수의 주소를 초기값으로 주는 것)


< 예시구문 1 >--------------------------------------------------------------------------------------------------------------------------------
int num1 = 10, num2;
int *ptr;
이렇게 3개의 변수를 선언했습니다.


(1번예시)-------------------------------------------------
ptr = &num1;
포인터에 num1의 주소를 넣었다고 합시다.

이때
*ptr = 5;
이렇게 해주면 포인터에 저장되어 있는 주소
즉, num1이라는 변수의 주소에 5를 넣어주므로 결국에는 num1은 5가 됩니다.


(2번예시)-------------------------------------------------
num2 = *ptr;
이렇게 했다면 포인터에 저장되어 있는 주소에 들어있는 값 즉 num1이라는 변수의 주소에 들어있는 값인 5가 num2에도 들어가
num1, num2가 모두 5가 되죠.

-------------------------------------------------------------------------------------------------------------------------------------------------